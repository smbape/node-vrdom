deps = ['material-design-lite'];

function fvrdom(componentHandler) {
    var hasProp = Object.prototype.hasOwnProperty;

    function MDLMiddleware(args) {
        var type = args[0];
        var config = args[1];

        if (config && !config.mdlIgnore && ("string" === typeof type) && /(?:^|\s)mdl-/.test(config.className)) {
            config = args[1] = vrdom.functions.clone(config);
            config.tagName = type;
            config.mdlIgnore = true;
            type = args[0] = MDLComponent;
        }

        if (config && 'string' === typeof type && hasProp.call(config, 'mdlIgnore')) {
            config = args[1] = vrdom.functions.clone(config);
            delete config.mdlIgnore;
        }

        return args;
    }

    class MDLComponent extends vrdom.Component {
        componentDidMount() {
            this.el = vrdom.findDOMNode(this);
            componentHandler.upgradeElement(this.el);
        }

        componentWillUnmount() {
            componentHandler.downgradeElements([this.el]);
            delete this.el;
        }

        render() {
            var props = vrdom.functions.clone(this.props);
            var tagName = props.tagName || 'span';
            delete props.tagName;
            return vrdom.createElement(tagName, props);
        }
    }

    var hooks = vrdom.hooks;

    MDLComponent.register = function() {
        if (!isRegistered()) {
            hooks.appendHook('beforeCreateElement', MDLMiddleware);
        }
    }

    MDLComponent.unregister = function() {
        if (isRegistered()) {
            hooks.removeHook('beforeCreateElement', MDLMiddleware);
        }
    }

    function isRegistered() {
        return hooks.getHooks('beforeCreateElement').indexOf(MDLMiddleware) !== -1;
    }

    return MDLComponent;
}