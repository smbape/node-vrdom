{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:/webpack/bootstrap 44d545e6f451566a9cfb","webpack:///vrdom-devtools/vrdom-devtools.js","webpack:/external {\"amd\":\"vrdom\",\"commonjs\":\"vrdom\",\"commonjs2\":\"vrdom\",\"root\":\"vrdom\"}"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_1__","__webpack_require__","moduleId","installedModules","id","loaded","modules","call","m","c","p","toReactTopLevelWrapper","vnode","roots","Mount","Reconciler","_renderedComponent","toReactWrapper","wrapper","_rootID","key","_currentElement","type","ReactTopLevelWrapper","props","child","ref","_instance","context","refs","rootID","state","_renderNewRootComponent","node","parentNode","mountComponent","instance","toReactComponent","visitNonCompositeChildren","childInst","_inDevTools","noUpdate","_reactInternalDevToolInstance","inst","instanceMap","has","get","set","defineComponentProperties","findRoots","childNodes","i","len","length","hasProp","expando","rootVNode","nestedChildNodes","nodeName","toUpperCase","contentDocument","e","createDevToolsBridge","global","document","_instancesByReactRootID","nextElement","container","shouldReuseMarkup","performUpdateIfNecessary","receiveComponent","unmountComponent","body","ComponentTree","getNodeFromInstance","_hostNode","getClosestInstanceFromNode","map","nodeMap","vrdomID","componentDidMount","isRootVNode","componentDidUpdate","prevRenderedChildren","push","forEach","contains","delete","componentWillUnmount","rootInstance","visitor","isWidget","isVNode","Array","isArray","_renderedChildren","parent","register","window","__REACT_DEVTOOLS_GLOBAL_HOOK__","registered","bridge","componentDidMountHook","componentDidUpdateHook","componentWillUnmountHook","inject","hooks","appendHook","unregister","removeHook","_renderers","vrdom","functions","getDisplayName","defineGetSetProperty","obj","prop","getter","setter","Object","defineProperty","configurable","enumerable","value","writable","INTERFACE_PROPERTIES","addInterface","iface","keys","indexOf","ReactDOMComponentInterface","getName","element","children","canonicalKey","ReactCompositeComponentInterface","thunk","_context","stateless","component","_type","ReactTextComponentInterface","text","_stringText","isVText","Component","isReactTopLevelWrapper","Map"],"mappings":"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","file":"dist/vrdom-devtools.min.js","sourceRoot":"","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vrdom\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"vrdom\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vrdomDevtools\"] = factory(require(\"vrdom\"));\n\telse\n\t\troot[\"vrdomDevtools\"] = factory(root[\"vrdom\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 44d545e6f451566a9cfb","/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n\n/* eslint-disable valid-jsdoc, no-empty-function */\n\nconst vrdom = require(\"vrdom\"),\n    expando = vrdom.expando,\n    nodeMap = vrdom.nodeMap,\n    functions = vrdom.functions,\n    getDisplayName = functions.getDisplayName,\n    hasProp = functions.hasProp,\n    hooks = vrdom.hooks;\n\nconst defineGetSetProperty = (obj, prop, getter, setter) => {\n    Object.defineProperty(obj, prop, {\n        configurable: true,\n        enumerable: true,\n        get: getter,\n        set: typeof setter === \"function\" ? setter : function(value) {\n            Object.define(this, prop, {\n                configurable: true,\n                enumerable: true,\n                writable: true,\n                value\n            });\n            return value;\n        }\n    });\n};\n\nconst INTERFACE_PROPERTIES = [];\n\nconst addInterface = iface => {\n    Object.keys(iface).forEach(prop => {\n        if (INTERFACE_PROPERTIES.indexOf(prop) === -1) {\n            INTERFACE_PROPERTIES.push(prop);\n        }\n\n        if (typeof iface[prop] === \"function\") {\n            iface[prop] = {\n                getter: iface[prop]\n            };\n        }\n    });\n\n    return iface;\n};\n\n/**\n * Transform a virtual node to a ReactDOMComponent compatible object\n * @type {Object}\n */\nconst ReactDOMComponentInterface = addInterface({\n    getName() {\n        return this.vnode.type;\n    },\n\n    _currentElement() {\n        return this.vnode.element;\n    },\n\n    _renderedChildren() {\n        const children = this.vnode.children;\n        let _renderedChildren;\n\n        if (children !== null && \"object\" === typeof children) {\n            _renderedChildren = [];\n\n            // eslint-disable-next-line guard-for-in\n            for (let canonicalKey in children) {\n                _renderedChildren.push(toReactComponent(children[canonicalKey]));\n            }\n        }\n\n        return _renderedChildren;\n    }\n});\n\n/**\n * Transform a virtual node to a ReactCompositeComponent compatible object\n * @type {Object}\n */\nconst ReactCompositeComponentInterface = addInterface({\n    getName() {\n        return getDisplayName(this.vnode.element.type);\n    },\n\n    _currentElement: {\n        getter() {\n            return this.vnode.element;\n        },\n\n        // forceUpdate set _currentElement\n        setter(element) {\n            this.vnode.element = element;\n            return element;\n        }\n    },\n\n    _renderedComponent() {\n        return toReactComponent(this.vnode.thunk.vnode);\n    },\n\n    _context() {\n        if (this.stateless) {\n            return this.vnode.context;\n        }\n\n        return undefined;\n    },\n\n    _instance() {\n        if (this.stateless) {\n            return {\n                context: this._context,\n                props: this.vnode.element.props,\n                refs: {},\n                state: null\n            };\n        }\n\n        return this.vnode.thunk.component;\n    },\n\n    stateless() {\n        return this.vnode.thunk._type === \"Stateless\";\n    }\n});\n\n/**\n * Transform a virtual node to a ReactTextComponent compatible object\n * @type {Object}\n */\nconst ReactTextComponentInterface = addInterface({\n    _currentElement() {\n        return this.vnode.text;\n    },\n\n    _stringText() {\n        return this.vnode.text;\n    }\n});\n\nconst defineComponentProperties = (inst, vnode) => {\n    inst.vnode = vnode;\n    inst._inDevTools = false;\n\n    defineGetSetProperty(inst, \"_hostNode\", function() {\n        // eslint-disable-next-line no-invalid-this\n        return this.vnode.node;\n    });\n\n    defineGetSetProperty(inst, \"isWidget\", function() {\n        // eslint-disable-next-line no-invalid-this\n        return this.vnode.isWidget;\n    });\n\n    defineGetSetProperty(inst, \"isVNode\", function() {\n        // eslint-disable-next-line no-invalid-this\n        return this.vnode.isVNode;\n    });\n\n    defineGetSetProperty(inst, \"isVText\", function() {\n        // eslint-disable-next-line no-invalid-this\n        return this.vnode.isVText;\n    });\n\n    INTERFACE_PROPERTIES.forEach(prop => {\n        defineGetSetProperty(inst, prop, function() {\n            // eslint-disable-next-line no-invalid-this\n            const inst = this;\n            const {vnode} = inst;\n\n            if (vnode.isWidget) {\n                if (hasProp.call(ReactCompositeComponentInterface, prop) && typeof ReactCompositeComponentInterface[prop].getter === \"function\") {\n                    return ReactCompositeComponentInterface[prop].getter.call(inst);\n                }\n\n                return undefined;\n            }\n\n            if (vnode.isVNode) {\n                if (hasProp.call(ReactDOMComponentInterface, prop) && typeof ReactDOMComponentInterface[prop].getter === \"function\") {\n                    return ReactDOMComponentInterface[prop].getter.call(inst);\n                }\n\n                return undefined;\n            }\n\n            if (hasProp.call(ReactTextComponentInterface, prop) && typeof ReactTextComponentInterface[prop].getter === \"function\") {\n                return ReactTextComponentInterface[prop].getter.call(inst);\n            }\n\n            return undefined;\n        }, function(value) {\n            // eslint-disable-next-line no-invalid-this\n            const inst = this;\n            const {vnode} = inst;\n\n            if (vnode.isWidget) {\n                if (hasProp.call(ReactCompositeComponentInterface, prop) && typeof ReactCompositeComponentInterface[prop].setter === \"function\") {\n                    return ReactCompositeComponentInterface[prop].setter.call(inst, value);\n                }\n\n                return value;\n            }\n\n            if (vnode.isVNode) {\n                if (hasProp.call(ReactDOMComponentInterface, prop) && typeof ReactDOMComponentInterface[prop].setter === \"function\") {\n                    return ReactDOMComponentInterface[prop].setter.call(inst, value);\n                }\n\n                return value;\n            }\n\n            if (hasProp.call(ReactTextComponentInterface, prop) && typeof ReactTextComponentInterface[prop].setter === \"function\") {\n                return ReactTextComponentInterface[prop].setter.call(inst, value);\n            }\n\n            return value;\n        });\n    });\n};\n\nclass ReactTopLevelWrapper extends vrdom.Component {\n    render() {\n        return this.props.child;\n    }\n}\n\nReactTopLevelWrapper.isReactTopLevelWrapper = true;\n\n/**\n * Transform a virtual node to a ReactTopLevelWrapper compatible object\n * \n * @param  {VirtualNode|VirtualText|ComponentWidget} vnode      virtual node to transform\n * @param  {Object}                                  roots      roots dictionary\n * @param  {Object}                                  Mount      Mount object\n * @param  {Object}                                  Reconciler Reconciler object\n * \n * @return {ReactTopLevelWrapper}                    ReactTopLevelWrapper compatible object\n */\nfunction toReactTopLevelWrapper(vnode, roots, Mount, Reconciler) {\n    let _renderedComponent = toReactWrapper(vnode, Mount, Reconciler);\n    if (_renderedComponent.wrapper) {\n        return _renderedComponent.wrapper;\n    }\n\n    let wrapper = {\n        _rootID: vnode.key,\n        _renderedComponent: _renderedComponent,\n        _currentElement: {\n            type: ReactTopLevelWrapper,\n            props: {\n                child: _renderedComponent._currentElement\n            },\n            key: null,\n            ref: null\n        },\n        _instance: {\n            context: vnode.context,\n            props: {\n                child: _renderedComponent._currentElement\n            },\n            refs: {},\n            rootID: vnode.key,\n            state: null\n        }\n    };\n\n    roots[wrapper._rootID] = wrapper;\n    _renderedComponent.wrapper = wrapper;\n    Mount._renderNewRootComponent(wrapper._currentElement, vnode.node.parentNode, null, vnode.context, wrapper);\n    Reconciler.mountComponent(wrapper);\n    return wrapper;\n}\n\n/**\n * [toReactWrapper description]\n * \n * @param  {VirtualNode|VirtualText|ComponentWidget} vnode      virtual node to transform\n * @param  {Object}                                  Mount      Mount object\n * @param  {Object}                                  Reconciler Reconciler object\n * \n * @return {[type]}            [description]\n */\nfunction toReactWrapper(vnode, Mount, Reconciler) {\n    let instance = toReactComponent(vnode);\n\n    visitNonCompositeChildren(instance, childInst => {\n        childInst._inDevTools = true;\n        Reconciler.mountComponent(childInst);\n    });\n    Reconciler.mountComponent(instance);\n\n    return instance;\n}\n\n/**\n * Map of Component|Node to ReactDOMComponent|ReactCompositeComponent-like\n * object.\n *\n * The same React*Component instance must be used when notifying devtools\n * about the initial mount of a component and subsequent updates.\n */\nlet instanceMap = new Map();\n\n/**\n * Transform a virtual node to a ReactComponent compatible object\n * \n * @param  {VirtualNode|VirtualText|ComponentWidget} vnode    virtual node to transform\n * @param  {Boolean}                                 noUpdate do not update\n * \n * @return {[type]}                                  ReactComponent compatible object\n */\nfunction toReactComponent(vnode, noUpdate) {\n    if (vnode == null) {\n        return null;\n    }\n\n    if (noUpdate) {\n        return vnode._reactInternalDevToolInstance;\n    }\n\n    let inst;\n\n    if (instanceMap.has(vnode.key)) {\n        inst = instanceMap.get(vnode.key);\n    } else {\n        inst = {};\n        instanceMap.set(vnode.key, inst);\n    }\n\n    defineComponentProperties(inst, vnode);\n\n    vnode._reactInternalDevToolInstance = inst;\n    return inst;\n}\n/**\n * Find all root component instances rendered by vrdom in `node`'s children\n * and add them to the `roots` map.\n *\n * @param {DOMElement} node\n * @param {[key: string] => ReactDOMComponent|ReactCompositeComponent}\n */\nfunction findRoots(childNodes, roots, Mount, Reconciler) {\n    for (let i = 0, len = childNodes.length; i < len; i++) {\n        const child = childNodes[i];\n\n        if (hasProp.call(child, expando) && hasProp.call(child[expando], \"rootVNode\")) {\n            let rootVNode = child[expando].rootVNode;\n            toReactTopLevelWrapper(rootVNode, roots, Mount, Reconciler);\n        }\n\n        let nestedChildNodes = child.childNodes;\n        if (child.nodeName && child.nodeName.toUpperCase() === \"IFRAME\") {\n            try {\n                nestedChildNodes = [child.contentDocument];\n            } catch ( e ) {\n                // Nothing to do\n            }\n        }\n        findRoots(nestedChildNodes, roots, Mount, Reconciler);\n    }\n}\n\n/**\n * Create a bridge for exposing vrdom's component tree to React DevTools.\n *\n * It creates implementations of the interfaces that ReactDOM passes to\n * devtools to enable it to query the component tree and hook into component\n * updates.\n *\n * See https://github.com/facebook/react/blob/59ff7749eda0cd858d5ee568315bcba1be75a1ca/src/renderers/dom/ReactDOM.js\n * for how ReactDOM exports its internals for use by the devtools and\n * the `attachRenderer()` function in\n * https://github.com/facebook/react-devtools/blob/e31ec5825342eda570acfc9bcb43a44258fceb28/backend/attachRenderer.js\n * for how the devtools consumes the resulting objects.\n */\nfunction createDevToolsBridge(global) {\n    const document = global.document;\n\n    // The devtools has different paths for interacting with the renderers from\n    // React Native, legacy React DOM and current React DOM.\n    //\n    // Here we emulate the interface for the current React DOM (v15+) lib.\n\n    // Map of root ID (the ID is unimportant) to component instance.\n    let roots = {};\n\n    // ReactMount-like object\n    //\n    // Used by devtools to discover the list of root component instances and get\n    // notified when new root components are rendered.\n    const Mount = {\n        _instancesByReactRootID: roots,\n\n        // Stub - React DevTools expects to find this method and replace it\n        // with a wrapper in order to observe new root components being added\n        _renderNewRootComponent(nextElement, container, shouldReuseMarkup, context, wrapper) {\n            return wrapper;\n        }\n    };\n\n    // ReactReconciler-like object\n    const Reconciler = {\n        // Stubs - React DevTools expects to find these methods and replace them\n        // with wrappers in order to observe components being mounted, updated and\n        // unmounted\n        mountComponent( /* instance, ... */ ) {},\n        performUpdateIfNecessary( /* instance, ... */ ) {},\n        receiveComponent( /* instance, ... */ ) {},\n        unmountComponent( /* instance, ... */ ) {}\n    };\n\n    findRoots(document.body.childNodes, roots, Mount, Reconciler);\n\n    // ReactDOMComponentTree-like object\n    const ComponentTree = {\n        getNodeFromInstance(instance) {\n            return instance._hostNode;\n        },\n        getClosestInstanceFromNode(node) {\n            while (node && !hasProp.call(node, expando)) {\n                node = node.parentNode;\n            }\n\n            if (node == null) {\n                return null;\n            }\n\n            if (node[expando].rootVNode) {\n                return toReactTopLevelWrapper(node[expando].rootVNode, roots, Mount, Reconciler);\n            }\n\n            let map = nodeMap[node[expando].vrdomID];\n            if (map == null) {\n                return null;\n            }\n\n            return toReactComponent(map.vnode, true);\n        }\n    };\n\n    const componentDidMount = vnode => {\n        if (isRootVNode(vnode)) {\n            toReactTopLevelWrapper(vnode, roots, Mount, Reconciler);\n            return;\n        }\n\n        toReactWrapper(vnode, Mount, Reconciler);\n    };\n\n    const componentDidUpdate = vnode => {\n        const prevRenderedChildren = [];\n        visitNonCompositeChildren(instanceMap.get(vnode.key), childInst => {\n            prevRenderedChildren.push(childInst);\n        });\n\n        // Notify devtools about updates to this vnode and any non-composite\n        // children\n        const instance = toReactComponent(vnode);\n        Reconciler.receiveComponent(instance);\n        visitNonCompositeChildren(instance, childInst => {\n            if (!childInst._inDevTools) {\n                // New DOM child vnode\n                childInst._inDevTools = true;\n                Reconciler.mountComponent(childInst);\n            } else {\n                // Updated DOM child vnode\n                Reconciler.receiveComponent(childInst);\n            }\n        });\n\n        // For any non-composite children that were removed by the latest render,\n        // remove the corresponding ReactDOMComponent-like instances and notify\n        // the devtools\n        prevRenderedChildren.forEach(childInst => {\n            if (!document.body.contains(childInst._hostNode)) {\n                instanceMap.delete(childInst.vnode);\n                Reconciler.unmountComponent(childInst);\n                delete childInst._hostNode;\n                delete childInst.vnode;\n            }\n        });\n    };\n\n    const componentWillUnmount = vnode => {\n        let instance = toReactComponent(vnode);\n        let rootInstance;\n\n        if (isRootVNode(vnode)) {\n            rootInstance = toReactTopLevelWrapper(instance.vnode, roots, Mount, Reconciler);\n            Reconciler.unmountComponent(instance);\n        }\n\n        visitNonCompositeChildren(childInst => {\n            instanceMap.delete(childInst.vnode);\n            Reconciler.unmountComponent(childInst);\n            delete childInst._hostNode;\n            delete childInst.vnode;\n        });\n\n        Reconciler.unmountComponent(instance);\n\n        instanceMap.delete(vnode.key);\n        if (instance._rootID) {\n            delete roots[instance._rootID];\n        }\n        delete instance._hostNode;\n        delete instance.vnode;\n        delete vnode._reactInternalDevToolInstance;\n\n        if (rootInstance) {\n            delete rootInstance._hostNode;\n            delete rootInstance.vnode;\n            delete vnode._reactInternalDevToolInstance;\n        }\n    };\n\n    return {\n        componentDidMount,\n        componentDidUpdate,\n        componentWillUnmount,\n\n        // Interfaces passed to devtools via __REACT_DEVTOOLS_GLOBAL_HOOK__.inject()\n        ComponentTree,\n        Mount,\n        Reconciler\n    };\n}\n\n/**\n * Visit all child instances of a ReactCompositeComponent-like object that are\n * not composite components (ie. they represent DOM elements or text)\n *\n * @param {ReactInternalComponent} instance\n * @param {(ReactInternalComponent) => void} visitor\n */\nfunction visitNonCompositeChildren(instance, visitor) {\n    if (instance.isWidget) {\n        visitNonCompositeChildren(instance._renderedComponent, visitor);\n    } else if (instance.isVNode) {\n        visitor(instance);\n\n        if (Array.isArray(instance._renderedChildren)) {\n            instance._renderedChildren.forEach(childInst => {\n                visitNonCompositeChildren(childInst, visitor);\n            });\n        }\n    }\n}\n\n/**\n * Return `true` if a vrdom vnode is a top level vnode rendered by\n * `render()` into a container Element.\n */\nfunction isRootVNode(vnode) {\n    return !vnode.parent;\n}\n\nlet registered = false;\nlet componentDidMountHook, componentDidUpdateHook, componentWillUnmountHook;\n\n/**\n * Create a bridge between the vrdom component tree and React's dev tools\n * and register it.\n *\n * After this function is called, the React Dev Tools should be able to detect\n * \"React\" on the page and show the component tree.\n *\n * This function hooks into vrdom VNode creation in order to expose functional\n * components correctly, so it should be called before the root component(s)\n * are rendered.\n */\nexport function register(global) {\n    if (global == null) {\n        global = window;\n    }\n\n    const __REACT_DEVTOOLS_GLOBAL_HOOK__ = global.__REACT_DEVTOOLS_GLOBAL_HOOK__;\n\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === \"undefined\" || registered) {\n        // React DevTools are not installed\n        return;\n    }\n\n    const bridge = createDevToolsBridge(global);\n    componentDidMountHook = bridge.componentDidMount;\n    componentDidUpdateHook = bridge.componentDidUpdate;\n    componentWillUnmountHook = bridge.componentWillUnmount;\n\n    // Notify devtools about this instance of \"React\"\n    registered = __REACT_DEVTOOLS_GLOBAL_HOOK__.inject(bridge);\n\n    hooks.appendHook(\"componentDidMount\", componentDidMountHook);\n    hooks.appendHook(\"componentDidUpdate\", componentDidUpdateHook);\n    hooks.appendHook(\"componentWillUnmount\", componentWillUnmountHook);\n}\n\nexport function unregister() {\n    if (registered) {\n        hooks.removeHook(\"componentDidMount\", componentDidMountHook);\n        hooks.removeHook(\"componentDidUpdate\", componentDidUpdateHook);\n        hooks.removeHook(\"componentWillUnmount\", componentWillUnmountHook);\n\n        delete __REACT_DEVTOOLS_GLOBAL_HOOK__._renderers[registered];\n        registered = false;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./vrdom-devtools/vrdom-devtools.js","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"amd\":\"vrdom\",\"commonjs\":\"vrdom\",\"commonjs2\":\"vrdom\",\"root\":\"vrdom\"}\n// module id = 1\n// module chunks = 0"]}